{"version":3,"sources":["../src/base-writer.js"],"names":[],"mappings":"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","file":"base-writer.js","sourcesContent":["\"use strict\"\n\nvar fs = require('fs-extra')\n  , path = require('path')\n  , util = require('util')\n  , logger = require('./logger')\n  , Promise = require(\"bluebird\")\n  , datauri = require('datauri').sync\n\nclass BaseWriter {\n\n  /**\n   *\n   * @param {GWC} GWC instance\n   */\n  constructor(converter) {\n    this.converter = converter\n  }\n\n  write(filename, html) {\n    var self = this\n    return new Promise(function(resolve, reject) {\n      fs.writeFile(filename, html, function(err) {\n        if (err) {\n          return reject(err)\n        }\n        logger.info(self.getExtension() + ' file written: %s', filename)\n        resolve(filename)\n      })\n    })\n  }\n\n  getExtension() {\n    throw new Error('You must define an getExtension() in your writer')\n  }\n\n  getFilename() {\n    return path.join(this.converter.getOption('output'), this.converter.getOption('filename') + '.' + this.getExtension())\n  }\n\n  getCssTags() {\n    return this.getAssetsTags(this.converter.getCssFiles(), 'css').join('\\n')\n  }\n\n  getJsTags() {\n    return this.getAssetsTags(this.converter.getJsFiles(), 'js').join('\\n')\n  }\n\n  getLimedocsGeneratedImgData() {\n    return datauri(path.resolve(__dirname, '../assets/images/Limedocs-generated.png'))\n  }\n\n  getExtraCss() {\n    var tocLevel = this.converter.getOption('tocLevel'),\n      tocLevelBaseCss = '> .nav > li '\n    return '.nav > li ' + tocLevelBaseCss.repeat(tocLevel) + '{display: none;}'\n  }\n\n  getAssetsTags(files, type) {\n    return files.map(function(file) {\n      return this.getAssetSingleTag(file, type)\n    }, this)\n  }\n\n  getAssetSingleTag(file, type) {\n    var tplIn, tplOut\n\n    if (type === 'js') {\n      tplIn = '<script>%s</script>'\n      tplOut = '<script src=\"%s\" type=\"javascript\"></script>'\n    } else {\n      tplIn = '<style>%s</style>'\n      tplOut = '<link href=\"%s\" rel=\"stylesheet\" />'\n    }\n\n    return this.converter.getOption('disableInlineAssets') ?\n      util.format(tplOut, path.basename(file)):\n      util.format(tplIn, fs.readFileSync(file, {encoding : 'utf8'}))\n  }\n\n}\n\nmodule.exports = BaseWriter\n"]}