{"version":3,"sources":["../src/helpers.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;;;;AAEZ,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC5B,IAAM,eAAe,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAA;;IAE7C,OAAO;WAAP,OAAO;0BAAP,OAAO;;;eAAP,OAAO;;WAEuB,qCAAC,QAAQ,EAAE;AAC3C,UAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;AAClC,UAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;AAC7B,YAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;OACvC;AACD,aAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAA;KAC9C;;;WAEqB,yBAAC,IAAI,EAAE;AAC3B,uDAA+C,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAE;KAC9E;;;SAZG,OAAO;;;AAeb,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA","file":"helpers.js","sourcesContent":["\"use strict\"\n\nconst path = require('path')\nconst plantumlEncoder = require('plantuml-encoder')\n\nclass Helpers {\n\n  static getPageIdFromFilenameOrLink(filename) {\n    var base = path.basename(filename)\n    if (base.substr(-3) === '.md') {\n      base = base.substr(0, base.length - 3)\n    }\n    return base.replace(/([^a-z0-9\\-_~]+)/gi, '')\n  }\n\n  static getPlantEncoded(code) {\n    return `http://www.plantuml.com/plantuml/svg/${plantumlEncoder.encode(code)}`\n  }\n}\n\nmodule.exports = Helpers\n"]}