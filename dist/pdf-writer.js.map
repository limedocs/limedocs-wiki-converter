{"version":3,"sources":["../src/pdf-writer.js"],"names":[],"mappings":"AAAA,YAAY,CAAA;;;;;;;;;;AAEZ,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;IACpC,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;IAC7B,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC;IACxB,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC;IAC5B,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;;IAEnC,SAAS;YAAT,SAAS;;WAAT,SAAS;0BAAT,SAAS;;+BAAT,SAAS;;;eAAT,SAAS;;WAED,wBAAG;AACb,aAAO,KAAK,CAAA;KACb;;;WAEa,wBAAC,SAAS,EAAE,MAAM,EAAE;AAChC,2BAAkB,MAAM,2DAAmD,SAAS,WAAO;KAC5F;;;WAEI,iBAAG;;;AAEN,UAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE;UACzB,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;UAC1B,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;UAC7B,IAAI,GAAG,IAAI,CAAA;;AAEf,YAAM,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;;AAElE,WAAK,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACpB,YAAI,MAAM,GAAG,OAAO,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC3D,YAAI,OAAO,GAAG,MAAK,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAA;AACjE,YAAI,IAAI,OAAO,CAAA;OAChB,EAAE,IAAI,CAAC,CAAA;;AAER,UAAI,IAAI,IAAI,CAAC,WAAW,EAAE,CAAA;;AAE1B,aAAO,IAAI,OAAO,CAAC,CAAA,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,mBAAW,CAAC,IAAI,EAAE,EAAC,GAAG,EAAG,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAC5C,EAAE,CAAC,KAAK,EAAE,YAAW;AACpB,gBAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,mBAAmB,EAAE,QAAQ,CAAC,CAAA;AAChE,iBAAO,CAAC,QAAQ,CAAC,CAAA;SAClB,CAAC,CACD,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CACnB,IAAI,CAAC,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAA;OACxC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KACd;;;WAEU,uBAAG;;AAEZ,UAAI,UAAU,6OAML,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,sBACjC,IAAI,CAAC,UAAU,EAAE,qBACV,IAAI,CAAC,WAAW,EAAE,sBACzB,IAAI,CAAC,SAAS,EAAE,koBAawB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,4DAIlE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,OAC/B,CAAA;AACG,aAAO,UAAU,CAAA;KAClB;;;WAGU,uBAAG;AACZ,UAAI,MAAM,yBAEN,CAAA;;AAEJ,aAAO,MAAM,CAAA;KACd;;;SA9EG,SAAS;GAAS,UAAU;;AAiFlC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAA","file":"pdf-writer.js","sourcesContent":["\"use strict\"\n\nvar wkhtmltopdf = require('wkhtmltopdf')\n  , Promise = require(\"bluebird\")\n  , helpers = require('./helpers')\n  , fs = require('fs-extra')\n  , logger = require('./logger')\n  , BaseWriter = require('./base-writer')\n\nclass PdfWriter extends BaseWriter {\n\n  getExtension() {\n    return 'pdf'\n  }\n\n  getPageBreaker(pageTitle, pageId) {\n    return `<h1 id=\"${pageId}\" style=\"page-break-before: always !important;\">${pageTitle}</h1>`\n  }\n\n  write() {\n\n    var html = this.buildHeader(),\n        pages = this.ld.getPages(),\n        filename = this.getFilename(),\n        self = this\n\n    logger.debug('Generating pdf: %d pages to generate', pages.length)\n\n    pages.forEach(page => {\n      var pageId = helpers.getPageIdFromFilenameOrLink(page.file)\n      var pdfPage = this.getPageBreaker(page.title, pageId) + page.html\n      html += pdfPage\n    }, this)\n\n    html += this.buildFooter()\n\n    return new Promise(function (resolve, reject) {\n      wkhtmltopdf(html, {toc : false, outline: true})\n        .on('end', function() {\n          logger.info(self.getExtension() + ' file written: %s', filename)\n          resolve(filename)\n        })\n        .on('error', reject)\n        .pipe(fs.createWriteStream(filename))\n    }.bind(this))\n  }\n\n  buildHeader() {\n\n    var htmlHeader = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>${this.ld.getOption('title')}</title>\n    ${this.getCssTags()}\n    <style>${this.getExtraCss()}</style>\n    ${this.getJsTags()}\n  </head>\n  <body id=\"page-top\" class=\"pdf-doc\">\n    <!-- Fixed navbar -->\n    <div class=\"navbar navbar-default\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand doc-title\">${this.ld.getOption('title')}</a>\n        </div>\n      </div>\n    </div>\n    ${this.ld.getToc().getHtml()}\n`\n    return htmlHeader\n  }\n\n\n  buildFooter() {\n    var footer = `\n  </body>\n</html>`\n\n    return footer\n  }\n}\n\nmodule.exports = PdfWriter\n"]}